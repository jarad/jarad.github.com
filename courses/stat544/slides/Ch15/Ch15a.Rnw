\documentclass[handout]{beamer}

\input{../frontmatter}
\input{../commands}

\title{Hierarchical linear models}

\begin{document}

<<options, results='hide', echo=FALSE, purl=FALSE>>=
opts_chunk$set(comment=NA, 
               fig.width=6, fig.height=5, 
               size='tiny', 
               out.width='0.8\\textwidth', 
               fig.align='center', 
               message=FALSE,
               echo=FALSE,
               cache=TRUE)
options(width=120)
@

<<libraries, warning=FALSE>>=
library(reshape2)
library(plyr)
library("dplyr")
library(ggplot2)
library(xtable)
library(lme4)
library(rstan)
library("rstanarm")
@

<<set_seed>>=
set.seed(2)
@

\frame{\maketitle}


\begin{frame}
\frametitle{Outline}

\begin{itemize}
\item Mixed effect models
\item Seedling weight example
\item Non-Bayesian analysis (missing pvalues/CI method)
\item Bayesian analysis in Stan
\item Compute posterior probabilities and CIs
\end{itemize}

\end{frame}


\section{Mixed-effect models}
\subsection{Notation}
\frame{\frametitle{Notation}
  Standard notation for mixed-effect models:
	\[ y = X\beta + Zu + e \]
	\pause where 
	\begin{itemize}[<+->]
	\item $y$ is an $n\times 1$ response vector
	\item $X$ is an $n\times p$ design matrix for fixed effects
	\item $\beta$ is a $p\times 1$ unknown fixed effect parameter vector
	\item $Z$ is an $n\times q$ design matrix for random effects
	\item $u$ is a $q\times 1$ unknown random effect parameter vector
	\item $e$ is an $n\times 1$ unknown error vector
	\end{itemize}
}

\subsection{Assumptions}
\frame{\frametitle{Assumptions}

	\[ y = X\beta + Zu + e \]
	Typically assume \pause 
	\begin{itemize} 
	\item $E[u] = E[e] = 0$ \pause 
	\item $V[u] = \Omega$ \pause and $V[e] = \Lambda$ \pause 
	\item $Cov[u,e] = 0$ \pause 
	\end{itemize}
	These assumptions imply
	\begin{itemize}
	\item $E[y|\beta,\Omega,\Lambda] = X\beta$ \pause 
	\item $V[y|\beta,\Omega,\Lambda] = Z\Omega Z'+\Lambda = \Sigma_y$ \pause
	\end{itemize}
	
	Common addition assumptions
	\begin{itemize}
	\item $V[e] = \Lambda = \sigma^2_e \I$, \pause 
	\item $V[u] = \Omega = \mbox{diag}\{ \sigma^2_{u,\cdot} \}$, \pause (or $V[u] = \Omega = \sigma^2_u \I$ for single source), \pause and
	\item $u$ and $e$ are normally distributed.
	\end{itemize}
}

\frame{\frametitle{Rewrite as a standard linear regression model}
	We can rewrite 
	\[ y = X\beta + Zu + e \]
	\pause as 
	\[ y = \tilde{X} \tilde{\beta} + e \]
	\pause where $\tilde{X}$ is $n\times (p+q)$ \pause with
	\[ \tilde{X} = [X\,\, Z] \]
	\pause and $\tilde{\beta}$ is a $(p+q) \times 1$ vector \pause with
	\[ \tilde{\beta} = \left[ \begin{array}{cc} \beta \\ u \end{array} \right]. \]
	\pause The fixed and random effects have been concatenated into the same vector.
}

\section{Hierarchical linear model}
\frame{\frametitle{Hierarchical linear model}
	Assume $y\sim N(\tilde{X} \tilde{\beta}, \Lambda)$. \pause A Bayesian analysis proceeds by assigning prior distributions to $\tilde{\beta}$ and $\Lambda$. \pause In constructing the prior for $\tilde{\beta}$, consider the components $\beta$ and $u$ separately. \pause Assume
	 \[ \beta \sim N(b, B) \qquad \mbox{and} \qquad u \sim N(0,\Omega) \]
	 independently. 
	 
	 \vspace{0.2in} \pause
	 
	 For the 
	 \begin{itemize}
	 \item {\bf fixed} effects $\beta$, we select $b$ and $B$ \pause while for the
	 \item {\bf random} effects $u$, we assign a prior for $\Omega$.  \pause
	 \end{itemize} 
	 Therefore we have created a hierarchical model for the random effects and thus refer to this as a \emph{hierarchical linear model}.
}

\section{Summary}
\frame{\frametitle{Summary}
	These models are referred to as 
	\begin{itemize}
	\item mixed-effect models, \pause
	\item hierarchical linear models, \pause or
	\item multi-level models.
	\end{itemize}
	
	\vspace{0.2in} \pause 
	
	The parameters for the prior distribution \pause for the
	\begin{itemize}
	\item  fixed effects are not learned \pause and
	\item  random effects are learned.
	\end{itemize}
	
	\vspace{0.2in} \pause  
	
	This corresponds to a non-Bayesian analysis learning a variance parameter for random effects. 
}



\section{Seedling weight example}
\frame{\frametitle{Seedling weight example}
  Example taken from Dan Nettleton:
	\begin{quote}
	Researchers were interested in comparing the dry
weight of maize seedlings from two different genotypes (A and B).
For each genotype, nine seeds were planted in each of
four trays. The eight trays in total were randomly
positioned in a growth chamber. Three weeks after the
emergence of the first seedling, emerged seedlings were
harvested from each tray and, after drying, weighed. 
	\end{quote}
  
  \vspace{0.2in} \pause
  
	Assume the missing data (emergence) mechanism is ignorable. 
  
  \vspace{0.2in} \pause
  
  Data: {\tiny \url{http://www.public.iastate.edu/~dnett/S511/SeedlingDryWeight2.txt}}
}

\frame{\frametitle{A picture}
\setkeys{Gin}{width=\textwidth}

	\vspace{-0.2in}

	\begin{center}
	\includegraphics{Ch15-19AitkenExample}
	\end{center}
}

\subsection{Model}
\frame{\frametitle{A mixed effect model for seedling weight}
	Let $y_{gts}$ be the seedling weight \pause of the 
	\begin{itemize}
	\item $g^{th}$ genotype with $g=1,2$, \pause
	\item $t^{th}$ tray $t=1,2,3,4$ of the $g^{th}$ genotype, \pause and 
	\item $s^{th}$ seedling with $s=1,\ldots,n_{gt}$.
	\end{itemize}
	Then, we assume 
	\[ y_{gts} = \gamma_g + \tau_{gt} + e_{gts} \]
	\pause where 
	\begin{itemize}
%  \item $\gamma_1=-\gamma_2$ for identifiability (sum-to-zero constraint)
	\item $\tau_{gt} \stackrel{ind}{\sim} N(0,\sigma^2_\tau)$ \pause and, independently,
	\item $e_{gts} \stackrel{ind}{\sim} N(0,\sigma^2_e)$. 
	\end{itemize}
  
  \pause
  
  The main quantity of interest is the difference in mean seedling weight: $\gamma_2-\gamma_1$. 
}

\frame{\frametitle{As a general mixed effects model}
	Let $X$ have the following 2 columns \pause
	\begin{itemize}
	\item col1: all ones (intercept) [$\gamma_1$] \pause 
%	\item col2: ones if genotype A and zeros otherwise [$\gamma_1$] \pause
	\item col2: ones if genotype B and zeros otherwise [$\gamma_2-\gamma_1$] \pause
	\end{itemize}
	Let $Z$ have the following 8 columns \pause 
	\begin{itemize}
	\item col1: ones if genotype 1, tray 1 and zeros otherwise [$\tau_{11}$] \pause
	\item col2: ones if genotype 1, tray 2 and zeros otherwise [$\tau_{12}$] \pause
	\item $\vdots$ \pause
	\item col8: ones if genotype 2, tray 4 and zeros otherwise [$\tau_{24}$] \pause
	\end{itemize}
	Then 
	\[ y = X\beta + Zu + e \] 
	\pause with $u\sim N(0,\sigma^2_\tau\I)$ and, independently, $e\sim N(0,\sigma^2_e\I)$. 
}


% \frame{\frametitle{Model construction for BUGS/JAGS/Stan}
%   An alternative notation convenient for programming in Stan \pause is
% 	\begin{itemize}
% 	\item $y_i$ is the weight for seedling $i$ with $i=1,\ldots,n$ \pause 
% 	\item $g[i]\in \{1,2\}$ is the genotype for seedling $i$  \pause
% 	\item $t[i]\in\{1,2,\ldots,8\}$ is the {\bf unique} tray id for seedling $i$
% 	\end{itemize}
% 	
% 	\vspace{0.2in} \pause 
% 	
% 	Then the model is 
% 	\[ y_i = \gamma_{g[i]} + \tau_{t[i]} + e_i \] 
% 	\pause with $e_i \stackrel{ind}{\sim} N(0,\sigma^2_e)$ and, independently, $\tau_t \stackrel{ind}{\sim} N(0,\sigma^2_\tau)$ for $t=1,\ldots,8$.
% 	
% 	\vspace{0.2in} \pause
% 	
% 	$\gamma_2-\gamma_1$ is the quantity of interet.
% }






\begin{frame}[fragile]
\frametitle{Seedling weight data}
<<data>>=
d = structure(list(Genotype = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
2L, 2L), .Label = c("A", "B"), class = "factor"), Tray = c(1L, 
1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 
3L, 3L, 3L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 5L, 5L, 5L, 5L, 
5L, 5L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 7L, 7L, 7L, 7L, 7L, 7L, 8L, 
8L, 8L, 8L, 8L, 8L, 8L, 8L), Seedling = c(1L, 2L, 3L, 4L, 5L, 
1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 
2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 
3L, 4L, 5L, 6L, 7L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 
6L, 7L, 8L), SeedlingWeight = c(8L, 9L, 11L, 12L, 10L, 17L, 17L, 
16L, 15L, 19L, 18L, 18L, 18L, 24L, 12L, 12L, 16L, 15L, 15L, 14L, 
17L, 20L, 20L, 19L, 19L, 18L, 20L, 19L, 19L, 9L, 12L, 13L, 16L, 
14L, 14L, 10L, 10L, 9L, 8L, 13L, 9L, 11L, 12L, 16L, 17L, 15L, 
15L, 15L, 9L, 6L, 8L, 8L, 13L, 9L, 9L, 10L)), .Names = c("Genotype", 
"Tray", "Seedling", "SeedlingWeight"), class = "data.frame", row.names = c(NA, 
-56L))
d$Seedling = NULL 
@

<<echo=TRUE>>=
head(d)
summary(d)
with(d, table(Genotype, Tray))
@
\end{frame}





\subsection{lmer}
\begin{frame}[fragile]
\frametitle{Non-Bayesian analysis}
<<non-Bayesian, echo=TRUE>>=
m1 = lmer(SeedlingWeight ~ Genotype + (1|Tray), d); summary(m1)
@

\pause 

Why no pvalues? 
\end{frame}



\begin{frame}
From {\tiny \url{https://stat.ethz.ch/pipermail/r-help/2006-May/094765.html}} (19 May 2006):
{\small 
\begin{quote}
Users are often surprised and alarmed that the summary of a linear
mixed model fit by lmer provides estimates of the fixed-effects
parameters, standard errors for these parameters and a t-ratio but no
p-values.  

... \pause

Most of the research on tests for the fixed-effects specification in a
mixed model begin with the assumption that these statistics will have
an F distribution with a known numerator degrees of freedom and the
only purpose of the research is to decide how to obtain an approximate
denominator degrees of freedom.  I don't agree.

... \pause 

For the time being, I would recommend using a Markov Chain Monte Carlo
sample (function mcmcsamp) to evaluate the properties of individual
coefficients (use HPDinterval or just summary from the "coda"
package).  

Dr. Douglas Bates
\end{quote}}
\end{frame}



\begin{frame}[fragile]
<<confidence_intervals, dependson="non-Bayesian", echo=TRUE>>=
confint(m1, method="profile")
confint(m1, method="Wald")
confint(m1, method="boot")
@
\end{frame}



\section{Bayesian analysis}
\frame{\frametitle{Bayesian model}
  An alternative notation convenient for programming in Stan \pause is
  \begin{itemize}
	\item $y_s$ is the weight for seedling $s$ with $s=1,\ldots,n$ \pause 
	\item $g[s]\in \{1,2\}$ is the genotype for seedling $s$  \pause
	\item $t[s]\in\{1,2,\ldots,8\}$ is the {\bf unique} tray id for seedling $s$
	\end{itemize}
	
	\vspace{0.2in} \pause 
	
	Then the model is 
	\[ y_s = \gamma_{g[s]} + \tau_{t[s]} + e_s \] 
	\pause with $e_s \stackrel{ind}{\sim} N(0,\sigma^2_e)$ and, independently, 
	$\tau_t \stackrel{ind}{\sim} N(0,\sigma^2_\tau)$ with $t=1,\ldots,8$.
	
	\vspace{0.2in} \pause
	
	Prior: 
\[ p(\gamma_1,\gamma_2,\sigma_e,\sigma_\tau) \propto 
Ca^+(\sigma_e;0,1)Ca^+(\sigma_\tau;0,1).\]
}


\subsection{Stan}
\begin{frame}[fragile]
<<stan_model, tidy=FALSE, echo=TRUE>>=
stan_model = "
data {
  int<lower=1> n;
  int<lower=1> n_genotypes;
  int<lower=1> n_trays;

  real y[n];
  int genotype[n];
  int tray[n];
}
parameters {
  real gamma[n_genotypes]; // Implicit improper prior over whole real line
  real tau[n_trays];
  real<lower=0> sigma_e;   
  real<lower=0> sigma_tau; 
}

model {
  sigma_e   ~ cauchy(0,1);
  sigma_tau ~ cauchy(0,1);

  tau ~ normal(0,sigma_tau);

  for (i in 1:n) y[i] ~ normal(gamma[genotype[i]]+tau[tray[i]], sigma_e);
}

generated quantities {
  real delta;
  delta = gamma[2] - gamma[1];
}
"
@
\end{frame}



\subsection{Results}
\begin{frame}[fragile]
<<analysis, dependson="stan_model", echo=TRUE>>=
m = stan_model(model_code=stan_model)

r = sampling(m, 
             list(n = nrow(d),
                  n_genotypes = nlevels(d$Genotype),
                  n_trays     = max(d$Tray),
                  genotype    = as.numeric(d$Genotype),
                  tray        = d$Tray,
                  y           = d$SeedlingWeight), 
             c("gamma","tau","sigma_e","sigma_tau","delta"),
             refresh = 0,
             chains  = 1,
             iter    = 10000)
@
\end{frame}




\begin{frame}[fragile]
<<table, dependson="analysis", echo=TRUE>>=
r
@
\end{frame}





\begin{frame}[fragile]
<<hyper_default, dependson="analysis">>=
plot(r, pars=c("sigma_e","sigma_tau"))
@
\end{frame}

\begin{frame}[fragile]
<<hyper_improved, dependson="analysis", warning=FALSE>>=
e <- extract(r, c("sigma_e","sigma_tau")) |> 
  as.data.frame() |>
  tidyr::gather(parameter,value)

ggplot(e, aes(x=value)) + 
  geom_histogram(aes(y=..density..), binwidth=0.1, alpha=0.4) +
  stat_function(fun = function(x) 2*dcauchy(x), aes(color='Prior')) +
  facet_wrap(~parameter) + 
  guides(color=FALSE) + 
  theme_bw()
@
\end{frame}


\begin{frame}[fragile]
<<tray, dependson="analysis">>=
plot(r, pars="tau")
@
\end{frame}


\begin{frame}[fragile]
<<genotype, dependson="analysis">>=
plot(r, pars=c("gamma","delta"))
@
\end{frame}


\begin{frame}[fragile]
<<genotype_correlation, dependson="analysis">>=
e <- extract(r, c("gamma")) |> 
  as.data.frame()


ggplot(e, aes(gamma.1, gamma.2)) + 
  stat_binhex() +
  scale_fill_continuous(trans = 'reverse') +
  theme_bw()
@
\end{frame}


\begin{frame}[fragile]
<<>>=
e <- extract(r, "delta") |>
  as.data.frame()

ggplot(e, aes(delta)) + 
  geom_histogram(binwidth=0.2) + 
  geom_vline(xintercept=0, color='red') + 
  labs('Difference between genotypes (A-B)') +
  theme_bw()
@
\end{frame}


\begin{frame}
\frametitle{Probability that genotype B has greater \alert{mean} seedling weight than genotype A.}

{\small

Given our prior, i.e. 
\[ p(\gamma_1,\gamma_2,\sigma_e,\sigma_\tau) \propto Ca^+(\sigma_e;0,1)Ca^+(\sigma_\tau;0,1),\]

\pause
Our posterior probability that genotype B has greater mean seedling weight than genotype A is 

\[ P(\gamma_2>\gamma_1|y) = P(\delta>0|y) \pause = E[\I(\delta>0)|y] = E[\I(\gamma_2>\gamma_1)|y]. \] 
\pause 
If $\delta^{(m)}$ are MCMC samples from $p(\delta|y)$, then 
\[ \frac{1}{M} \sum_{m=1}^M \I(\delta^{(m)}>0) \stackrel{a.s.}{\rightarrow} P(\gamma_2>\gamma_1|y) \]
\pause 
and (if the regularity conditions hold)
\[ \frac{1}{M} \sum_{m=1}^M \I(\delta^{(m)}>0) \stackrel{d}{\rightarrow} N(P(\gamma_2>\gamma_1|y), \sigma^2/M). \]
}
\end{frame}



\subsection{Comparing genotypes}
\begin{frame}[fragile]
<<probability, dependson='analysis', echo=TRUE>>=
library(mcmcse)
# Obtain samples for delta_tilde
samps <- extract(r, "delta", permuted=FALSE) |>
  plyr::adply(1:2) |> 
  dplyr::rename(delta = V1)

# Calculate posterior probability with MC error
samps |>
  group_by(chains) |>
  do(as.data.frame(mcse(.$delta>0))) |>
  ungroup() |>
  summarize(est = mean(est), se = sqrt(sum(se^2))/n())

# Calculate quantiles with MC error
samps |>
  group_by(chains) |>
  do(ddply(data.frame(q=c(.025,.5,.975)), .(q), 
           function(x) as.data.frame(mcse.q(.$delta, q=x$q)))) |>
  group_by(q) |>
  summarize(est = mean(est), se = sqrt(sum(se^2))/n())
@

\pause
A point estimate (posterior median) and a 95\% credible interval are calculated below:

<<echo=TRUE>>=
ddply(dd <- data.frame(q=c(.025,.5,.975)), .(q), function(x) as.data.frame(mcse.q(delta, x$q)))
@
\end{frame}



\subsection{Prediction}
\begin{frame}
\frametitle{Prediction for a new comparison}

The real question is whether this idea generalizes, i.e. is true for other representatives of these genotypes. \pause Let $\tilde{y}_A$ and $\tilde{y}_B$ be some future observation of seedling weight (on the same tray) for genotype A and B, respectively. \pause We might be interested in 
\[  P(\tilde{y}_B>\tilde{y}_A|y) = P(\tilde{\delta}>0|y) = E[\I(\tilde{\delta}>0)|y] \]
where $\tilde{\delta} = \tilde{y}_B-\tilde{y}_A$. \pause
If $\tilde{\delta}^{(m)} = \tilde{y}^{(m)}_B-\tilde{y}^{(m)}_A$ is a sample from the posterior predictive distribution, \pause then we can estimate this probability via 
\[ \frac{1}{M} \sum_{m=1}^M \I(\tilde{\delta}^{(m)}>0) \]
and have a similar LLN and CLT (if regularity conditions hold). 
\end{frame}


\begin{frame}
\frametitle{Prediction for a new comparison}

Assuming $\tilde{y}_A$ and $\tilde{y}_B$ are independent conditional on $\gamma_1,\gamma_2,$ and $\sigma_e$, then 
\[ \tilde{\delta} =\tilde{y}_B - \tilde{y}_A \sim N(\gamma_2-\gamma_1, 2\sigma_e^2) \]
\pause
and 
\[ p(\tilde{\delta}|y) = \int N(\tilde{\delta}; \gamma_2-\gamma_1, 2\sigma_e^2) p(\gamma_1,\gamma_2,\sigma_e|y) d\gamma_1 d\gamma_2 d\sigma_e \]
\end{frame}

\begin{frame}[fragile]
<<predictive_probability, dependson='analysis', echo=TRUE>>=
# Obtain samples for delta_tilde
samps = extract(r, c("delta","sigma_e"), permuted=FALSE) |>
  plyr::adply(1:2) |>
  mutate(delta_tilde = rnorm(n(), delta, sqrt(2)*sigma_e)) |>
  dplyr::select(-delta, -sigma_e) 

# Calculate posterior probability with MC error
samps |>
  group_by(chains) |>
  do(as.data.frame(mcse(.$delta_tilde>0))) |>
  ungroup() |>
  summarize(est = mean(est), se = sqrt(sum(se^2))/n())

# Calculate quantiles with MC error
samps |>
  group_by(chains) |>
  do(ddply(data.frame(q=c(.025,.5,.975)), .(q), 
           function(x) as.data.frame(mcse.q(.$delta_tilde, q=x$q)))) |>
  group_by(q) |>
  summarize(est = mean(est), se = sqrt(sum(se^2))/n())
@

\end{frame}


% \begin{frame}[fragile]
% \frametitle{Prediction for a new comparison (reduced MC error)}
% 
% Notice that 
% \[ P(\delta>0|\gamma_1,\gamma_2,\sigma_e) = 1-\Phi\left( \frac{\gamma_2-\gamma_1}{\sqrt{2}\sigma_e} \right) \]
% where $\Phi$ is the cdf of a standard normal. 
% 
% \pause
% 
% <<predictive_probability2, dependson='analysis', echo=TRUE>>=
% p = 1-pnorm(0,gamma2-gamma1,sqrt(2)*sigmae)
% ddply(data.frame(q=c(.025,.5,.975)), .(q), function(x) as.data.frame(mcse.q(p, q=x$q)))
% @
% 
% \end{frame}


\begin{frame}[fragile]
\frametitle{rstanarm}
<<rstanarm_fit, echo=TRUE>>=
m2 = stan_lmer(SeedlingWeight ~ Genotype + (1|Tray), 
               data    = d,
               
               prior_intercept = NULL,     # improper uniform on intercept
               prior = NULL,               # improper uniform for regression coefficients
               
               prior_aux = cauchy(0,1),    # residual standard deviation
               prior_covariance = decov(), # ???
               
               algorithm = "sampling",     # use MCMC (HMC)
               
               refresh = 0,
               chains  = 1,
               iter    = 10000)
@
\end{frame}

\begin{frame}[fragile]
\frametitle{}
<<rstarnarm_convergence, dependson="rstanarm">>=
summary(m2, probs = c(0.05,.5,.975))
@
\end{frame}

\begin{frame}[fragile]
\frametitle{}
<<rstanarm_results, dependson="rstanarm_fit", echo=TRUE>>=
m2
@
\end{frame}




\begin{frame}
\frametitle{Extensions}

Consider the model 
  \[ y_s = \gamma_{g[s]} + \tau_{t[s]} + e_s \] 
and the following modeling assumptions: 

\vspace{0.2in} \pause

\begin{itemize}[<+->]
\item $\gamma_g \stackrel{ind}{\sim} N(\mu,\sigma_\gamma^2)$ and learn $\mu,\sigma_\gamma$
\item $\tau_t \stackrel{ind}{\sim} La(0,\sigma_\tau^2)$
\item $\gamma_g \stackrel{ind}{\sim} La(\mu,\sigma_\gamma^2)$
\item $e_s \stackrel{ind}{\sim} La(0,\sigma_e^2)$
\item $e_s \stackrel{ind}{\sim} t_\nu(0,\sigma_e^2)$
\end{itemize}

\vspace{0.2in} \pause

From a Bayesian perspective these changes do not affect the approach to inference.

\end{frame}




\end{document}
